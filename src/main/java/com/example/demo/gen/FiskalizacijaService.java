
package com.example.demo.gen;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import jakarta.xml.ws.Service;
import jakarta.xml.ws.WebEndpoint;
import jakarta.xml.ws.WebServiceClient;
import jakarta.xml.ws.WebServiceException;
import jakarta.xml.ws.WebServiceFeature;


/**
 * This class was generated by the XML-WS Tools.
 * XML-WS Tools 4.0.1
 * Generated source version: 3.0
 * 
 */
@WebServiceClient(name = "FiskalizacijaService", targetNamespace = "http://www.apis-it.hr/fin/2012/services/FiskalizacijaService", wsdlLocation = "file:/C:/Users/Vjeko/Desktop/demo/src/main/resources/FiskalizacijaService.wsdl")
public class FiskalizacijaService
    extends Service
{

    private static final URL FISKALIZACIJASERVICE_WSDL_LOCATION;
    private static final WebServiceException FISKALIZACIJASERVICE_EXCEPTION;
    private static final QName FISKALIZACIJASERVICE_QNAME = new QName("http://www.apis-it.hr/fin/2012/services/FiskalizacijaService", "FiskalizacijaService");

    static {
        URL url = null;
        WebServiceException e = null;
        try {
            url = new URL("file:/C:/Users/Vjeko/Desktop/demo/src/main/resources/FiskalizacijaService.wsdl");
        } catch (MalformedURLException ex) {
            e = new WebServiceException(ex);
        }
        FISKALIZACIJASERVICE_WSDL_LOCATION = url;
        FISKALIZACIJASERVICE_EXCEPTION = e;
    }

    public FiskalizacijaService() {
        super(__getWsdlLocation(), FISKALIZACIJASERVICE_QNAME);
    }

    public FiskalizacijaService(WebServiceFeature... features) {
        super(__getWsdlLocation(), FISKALIZACIJASERVICE_QNAME, features);
    }

    public FiskalizacijaService(URL wsdlLocation) {
        super(wsdlLocation, FISKALIZACIJASERVICE_QNAME);
    }

    public FiskalizacijaService(URL wsdlLocation, WebServiceFeature... features) {
        super(wsdlLocation, FISKALIZACIJASERVICE_QNAME, features);
    }

    public FiskalizacijaService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public FiskalizacijaService(URL wsdlLocation, QName serviceName, WebServiceFeature... features) {
        super(wsdlLocation, serviceName, features);
    }

    /**
     * 
     * @return
     *     returns FiskalizacijaPortType
     */
    @WebEndpoint(name = "FiskalizacijaPortType")
    public FiskalizacijaPortType getFiskalizacijaPortType() {
        return super.getPort(new QName("http://www.apis-it.hr/fin/2012/services/FiskalizacijaService", "FiskalizacijaPortType"), FiskalizacijaPortType.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link jakarta.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns FiskalizacijaPortType
     */
    @WebEndpoint(name = "FiskalizacijaPortType")
    public FiskalizacijaPortType getFiskalizacijaPortType(WebServiceFeature... features) {
        return super.getPort(new QName("http://www.apis-it.hr/fin/2012/services/FiskalizacijaService", "FiskalizacijaPortType"), FiskalizacijaPortType.class, features);
    }

    private static URL __getWsdlLocation() {
        if (FISKALIZACIJASERVICE_EXCEPTION!= null) {
            throw FISKALIZACIJASERVICE_EXCEPTION;
        }
        return FISKALIZACIJASERVICE_WSDL_LOCATION;
    }

}
